<?php

namespace DummyNamespace;

use Illuminate\Http\Request;
use App\Services\DummyClassServices;
use App\Models\DummyClass;

class DummyClassController extends Controller {

	/**
	 * Instantiate a new controller instance.
	 *
	 * @return void
	 */
	public function __construct( ) {

		$this -> middleware( 'auth:api' ) -> only( 'store' );

	}

	public function getServices( ) { return new DummyClassServices( ); }

	/**
	 * Display a listing of the resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index( ) {
		return DummyClass::Conditions( ) -> get( ) ;
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function create() {
		//
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @return \Illuminate\Http\Response
	 */
	public function store( Request $request ) {
		$store = $this -> getServices ( ) -> store ( $request -> all( ) );
		return response( ) -> json( $store , $store -> code );
	}

	/**
	 * Display the specified resource.
	 *
     * @param  \DummyClass  $DummyClassVariable
	 * @return \Illuminate\Http\Response
	 */
	public function show( DummyClass $DummyClassVariable ) {
		//
	}

	/**
	 * Show the form for editing the specified resource.
	 *
     * @param  \DummyClass  $DummyClassVariable
	 * @return \Illuminate\Http\Response
	 */
	public function edit( DummyClass $DummyClassVariable ) {
		//
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
     * @param  \DummyClass  $DummyClassVariable
	 * @return \Illuminate\Http\Response
	 */
	public function update(Request $request, DummyClass $DummyClassVariable ) {
		$update = $this -> getServices ( ) -> update ( $request -> all( ) , $DummyClassVariable );
		return response( ) -> json( $update , $update -> code );
	}

	/**
	 * Remove the specified resource from storage.
	 *
     * @param  \DummyClass  $DummyClassVariable
	 * @return \Illuminate\Http\Response
	 */
	public function destroy( DummyClass $DummyClassVariable ) {
		$destroy = $this -> getServices ( ) -> destroy ( $id );
		return response( ) -> json( $destroy , $destroy -> code );
	}
}
